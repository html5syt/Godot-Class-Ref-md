name: Convert Godot XML to Markdown

on:
  workflow_dispatch:  # 允许手动触发
  push:
    branches: [ master ]  # 主分支推送时触发
    paths:
      - 'godot/doc/classes/**'  # 只有XML文件变化时才触发
      - 'main.py'  # 或者您的脚本路径
      - '.github/workflows/build.yaml'  # 或者您的工作流文件路径
  schedule:
    - cron: '0 0 1 * *'  # 每月1号零点触发

jobs:
  convert-docs:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.13'  # 使用您需要的Python版本

    - name: Install uv
      run: |
        curl -LsSf https://astral.sh/uv/install.sh | sh
        echo "$HOME/.cargo/bin" >> $GITHUB_PATH

    - name: Install dependencies
      run: |
        uv venv

    - name: Run conversion script
      run: |
        source .venv/bin/activate
        uv run main.py

    - name: Generate directory structure
      run: |
        cd translated_markdown
        tree -a > contents.txt
        echo "Generated at $(date)" >> contents.txt
        cd ..

    - name: Archive output
      uses: actions/upload-artifact@v4
      with:
        name: godot-docs-markdown
        path: translated_markdown/

    - name: Create ZIP archive
      run: |
        current_datetime=$(date +"%Y%m%d_%H%M%S")
        zip_filename="${GITHUB_REPOSITORY#*/}_docs_${current_datetime}.zip"
        zip -r "${zip_filename}" translated_markdown/
        echo "ZIP_FILENAME=${zip_filename}" >> $GITHUB_ENV
        echo "RELEASE_TAG=${current_datetime}" >> $GITHUB_ENV
        echo "RELEASE_NAME=${GITHUB_REPOSITORY#*/} Docs ${current_datetime}" >> $GITHUB_ENV

    - name: Create Release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: "${{ env.RELEASE_TAG }}"
        name: "${{ env.RELEASE_NAME }}"
        body: "Automatically generated Godot documentation export"
        token: ${{ secrets.GITHUB_TOKEN }}
        files: |
          ${{ env.ZIP_FILENAME }}